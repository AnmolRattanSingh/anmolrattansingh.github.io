<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Olin College: SP2021 Data Structures and Algorithms on Gati Aher&#39;s Blog</title>
    <link>http://GatiAher.github.io/tags/olin-college-sp2021-data-structures-and-algorithms/</link>
    <description>Recent content in Olin College: SP2021 Data Structures and Algorithms on Gati Aher&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 14 Dec 2021 21:21:42 -0400</lastBuildDate>
    
	<atom:link href="http://GatiAher.github.io/tags/olin-college-sp2021-data-structures-and-algorithms/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Disco-Cats: Arduinos &#43; ML Music</title>
      <link>http://GatiAher.github.io/projects/disco-cats-arduinos&#43;ml-music/</link>
      <pubDate>Tue, 14 Dec 2021 21:21:42 -0400</pubDate>
      
      <guid>http://GatiAher.github.io/projects/disco-cats-arduinos&#43;ml-music/</guid>
      <description>&lt;p&gt;My team spent 6 weeks building an interactive music visualization system that uses Arduinos, motors, an LED matrix, and sound to express musical pieces generated with machine learning!&lt;/p&gt;
&lt;p&gt;I learned how to (1) design an intuitive UI (2) use &lt;a href=&#34;https://magenta.tensorflow.org/multitrack&#34;&gt;Google&amp;rsquo;s Magenta multi-track VAE model&lt;/a&gt; to generate music based on user input (3) transmit the MIDI bitstream over serial (3) extract pitch, instrument, and duration information from the midi bitstream in real time (4) efficiently control an LED matrix and motors.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Details are available on our &lt;a href=&#34;https://olincollege.github.io/pie-2021-03/Disco-Cats/&#34;&gt;&lt;em&gt;Showcase Website!&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Code is on &lt;a href=&#34;https://github.com/GatiAher/disco_cats&#34;&gt;GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Demo video is on &lt;a href=&#34;https://youtu.be/nX_OTCaxyTM&#34;&gt;YouTube&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Survey of Data Structures for Large Scale Information Retrieval</title>
      <link>http://GatiAher.github.io/projects/survey-of-data-structures-for-large-scale-information-retrieval/</link>
      <pubDate>Sun, 09 May 2021 21:21:42 -0400</pubDate>
      
      <guid>http://GatiAher.github.io/projects/survey-of-data-structures-for-large-scale-information-retrieval/</guid>
      <description>&lt;p&gt;A survey of data structures used in large-scale information systems. Covers (i) how the inverted index data structure allows for constant time querying (ii) the need, problems, and clever design details of methods to compress big numbers (focusing on Elias-Fano and Partitioned Elias-Fano), and (iii) BitFunnel, an unusual probabilistic data structure used by the Bing search engine to bypass the curse of inverted index global updates.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5-minute video summary&lt;/strong&gt;:

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/UN6_yzZyczE&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>