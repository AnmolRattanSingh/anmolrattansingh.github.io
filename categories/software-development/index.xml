<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Software Development on Gati Aher&#39;s Blog</title>
    <link>http://GatiAher.github.io/categories/software-development/</link>
    <description>Recent content in Software Development on Gati Aher&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 14 Dec 2021 21:21:42 -0400</lastBuildDate>
    
	<atom:link href="http://GatiAher.github.io/categories/software-development/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Disco-Cats: Arduinos &#43; ML Music</title>
      <link>http://GatiAher.github.io/projects/disco-cats-arduinos&#43;ml-music/</link>
      <pubDate>Tue, 14 Dec 2021 21:21:42 -0400</pubDate>
      
      <guid>http://GatiAher.github.io/projects/disco-cats-arduinos&#43;ml-music/</guid>
      <description>&lt;p&gt;My team spent 6 weeks building an interactive music visualization system that uses Arduinos, motors, an LED matrix, and sound to express musical pieces generated with machine learning!&lt;/p&gt;
&lt;p&gt;I learned how to (1) design an intuitive UI (2) use &lt;a href=&#34;https://magenta.tensorflow.org/multitrack&#34;&gt;Google&amp;rsquo;s Magenta multi-track VAE model&lt;/a&gt; to generate music based on user input (3) transmit the MIDI bitstream over serial (3) extract pitch, instrument, and duration information from the midi bitstream in real time (4) efficiently control an LED matrix and motors.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Details available on our &lt;a href=&#34;https://olincollege.github.io/pie-2021-03/Disco-Cats/&#34;&gt;&lt;em&gt;Website!&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Code is on &lt;a href=&#34;https://github.com/GatiAher/disco_cats&#34;&gt;GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Demo video is on &lt;a href=&#34;https://youtu.be/nX_OTCaxyTM&#34;&gt;YouTube&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Building a Pan-Tilt 3D Scanner</title>
      <link>http://GatiAher.github.io/projects/building-a-pan-tilt-3d-scanner/</link>
      <pubDate>Tue, 28 Sep 2021 21:10:34 -0400</pubDate>
      
      <guid>http://GatiAher.github.io/projects/building-a-pan-tilt-3d-scanner/</guid>
      <description>&lt;p&gt;My team built a servo-driven pan-tilt mount for an infrared proximity sensor. To demonstrate the functionality of our design, we created a 3D scan of a cardboard letter cut in a Z shape. This project involved (1) designing and 3D-printing a pan-tilt servo and IR sensor, (2) programming an arduino to collect scan data, (3) projecting data from spherical coordinates into Cartesian coordinates in order to isolate a cross-section scan of the letter. I was responsible for the CAD mechanical design and making the 3D data projection and visualization.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Implementing Fast and Space-Efficient Look-up and Search</title>
      <link>http://GatiAher.github.io/projects/implementing-fast-and-space-efficient-look-up-and-search/</link>
      <pubDate>Sat, 08 May 2021 09:35:51 -0400</pubDate>
      
      <guid>http://GatiAher.github.io/projects/implementing-fast-and-space-efficient-look-up-and-search/</guid>
      <description>&lt;p&gt;The Bloom filter data structure tracks set-membership in a fast and space-efficient way. I first heard about Bloom filters when a start-up I was working for used Bloom filters to speed up their database search. Then, I heard about Microsoft using a stack of Bloom filters (a bit-sliced document signature data structure) to &lt;a href=&#34;https://dl.acm.org/doi/10.1145/3077136.3080789&#34;&gt;speed up the Bing search engine&amp;rsquo;s keyword search&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In this project, I explored these interesting data structures by implementing a Bloom filter and a bit-sliced document signature in C. I also wrote unit tests and a collection of fun demos to show how Bloom filters and bit-sliced signatures can be used. This report gives an overview of the project, demos and results, and highlights notable code design decisions.&lt;/p&gt;
&lt;p&gt;All code is available in my &lt;a href=&#34;https://github.com/GatiAher/BloomForSearchFromScratch&#34;&gt;GitHub Repo&lt;/a&gt;. I documented my progress on this &lt;a href=&#34;https://trello.com/b/xzVRxTDJ/bloomforsearchfromscratch&#34;&gt;Trello Board&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Xkcd Data Visualization</title>
      <link>http://GatiAher.github.io/projects/xkcd-data-visualization-website/</link>
      <pubDate>Tue, 19 May 2020 21:05:00 -0500</pubDate>
      
      <guid>http://GatiAher.github.io/projects/xkcd-data-visualization-website/</guid>
      <description>&lt;p&gt;This single-page web application lets users interact with xkcd comics clustered by similarity.&lt;/p&gt;
&lt;p&gt;Over the course of building this project, I learned how to clean data, use different natural language analysis techniques (&lt;strong&gt;stemming, lemminizing, TF-IDF, SVD, t-SNE&lt;/strong&gt;), build an interactive and reactive data visualization (&lt;strong&gt;D3.js&lt;/strong&gt;), and host a web application (&lt;strong&gt;Flask, Bootstrap, Heroku&lt;/strong&gt;).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Details documented on &lt;a href=&#34;https://github.com/GatiAher/Xkcd_Data_Visualization&#34;&gt;GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Hosted at &lt;a href=&#34;https://xkcd-data.herokuapp.com/&#34;&gt;https://xkcd-data.herokuapp.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
  </channel>
</rss>